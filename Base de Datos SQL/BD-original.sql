-- CREACIÓN DE TABLAS
DROP TABLE INCIDENCIAS;
DROP TABLE ENVIOS;
DROP TABLE SOLICITUDES;
DROP TABLE LINEAPEDIDO;
DROP TABLE PRODUCTOS;
DROP TABLE CATEGORIAS;
DROP TABLE PAGOS;
DROP TABLE PEDIDOS;
DROP TABLE EMPLEADOS;
DROP TABLE CLIENTES;

DROP SEQUENCE SEC_INCIDENCIA;
DROP SEQUENCE SEC_ENVIO;
DROP SEQUENCE SEC_SOLICITUD;
DROP SEQUENCE SEC_PRODUCTO;
DROP SEQUENCE SEC_CATEGORIA;
DROP SEQUENCE SEC_LINEAPEDIDO;
DROP SEQUENCE SEC_PAGO;
DROP SEQUENCE SEC_PEDIDO;
DROP SEQUENCE SEC_EMPLEADO;
DROP SEQUENCE SEC_CLIENTE;

CREATE TABLE CLIENTES(
OID_CLIENTE NUMBER(7),
nombre VARCHAR2(25),
apellidos VARCHAR2(35),
dirección VARCHAR2(256),
teléfono NUMBER(9),
email VARCHAR2(35),
dni VARCHAR2(9),
usuario VARCHAR2(15),
contrasenya VARCHAR2(20)
);

CREATE TABLE EMPLEADOS(
OID_EMPLEADO NUMBER(7),
nombre VARCHAR2(25),
apellidos VARCHAR2(25), 
email VARCHAR2(40),
telefono NUMBER(9),
dni VARCHAR2(9),
usuario VARCHAR2(16),
contrasenya VARCHAR2(16)
);

CREATE TABLE PEDIDOS(
OID_PEDIDO NUMBER(7),
fecha DATE,
direccion VARCHAR2(256),
pais VARCHAR2(8),
ciudad CHAR(15),
precio_total NUMBER(8,5),
codigo_postal NUMBER(5),
estado_pedido VARCHAR2(9),
OID_CLIENTE NUMBER(7)
);

CREATE TABLE PAGOS(
OID_PAGO  NUMBER(7),
cantidad NUMBER(*,3),
fecha_pago DATE,
estado_pago CHAR(9),
tipo_pago VARCHAR2(20), 
OID_PEDIDO NUMBER(7)
); 

CREATE TABLE CATEGORIAS(
OID_CATEGORIA NUMBER(7),
nombre_cat VARCHAR2(40));

CREATE TABLE PRODUCTOS(
OID_PRODUCTO NUMBER(7),
nombre VARCHAR2(40),
tamaño VARCHAR2(9),
descripcion VARCHAR2(100),
stock INTEGER DEFAULT 0,
precio NUMBER(4,2),
imagen VARCHAR(300),
OID_CATEGORIA NUMBER(7)
);

CREATE TABLE LINEAPEDIDO(
OID_LINEAPEDIDO NUMBER(7),
precio NUMBER(4,2),
cantidad NUMBER(*),
OID_PEDIDO NUMBER(7),
OID_PRODUCTO NUMBER(7)
);
 
 
CREATE TABLE SOLICITUDES(
OID_SOLICITUD NUMBER(7),
direccion VARCHAR2(256),
nombre_destinatario VARCHAR2(15),
telefono NUMBER(9),
OID_PEDIDO NUMBER(7),
OID_EMPLEADO NUMBER(7),
tipo VARCHAR2(11)
);

CREATE TABLE ENVIOS(
OID_ENVIO NUMBER(7),
numero_seguimiento NUMBER(16),
fecha_estimada DATE,
fecha_salida DATE,
OID_SOLICITUD NUMBER(7)
);

CREATE TABLE INCIDENCIAS(
OID_INCIDENCIA NUMBER(7),
fecha DATE,
descripcion VARCHAR(100),
estado CHAR(12), 
OID_ENVIO NUMBER(7)
);


---RESTRICIONES DE TABLA
---(valores no nulos)

ALTER TABLE CLIENTES MODIFY (DNI NOT NULL);
ALTER TABLE CLIENTES MODIFY (USUARIO NOT NULL);
ALTER TABLE EMPLEADOS MODIFY (DNI NOT NULL);
ALTER TABLE EMPLEADOS MODIFY (USUARIO NOT NULL);
ALTER TABLE PEDIDOS MODIFY (PAIS NOT NULL);
ALTER TABLE PEDIDOS MODIFY (PRECIO_TOTAL NOT NULL);
ALTER TABLE PEDIDOS MODIFY (ESTADO_PEDIDO NOT NULL);
ALTER TABLE PAGOS MODIFY (CANTIDAD NOT NULL);
ALTER TABLE PAGOS MODIFY (ESTADO_PAGO NOT NULL);
ALTER TABLE LINEAPEDIDO MODIFY (PRECIO NOT NULL);
ALTER TABLE LINEAPEDIDO MODIFY (CANTIDAD NOT NULL);
ALTER TABLE PRODUCTOS MODIFY (STOCK NOT NULL);
ALTER TABLE SOLICITUDES MODIFY (DIRECCION NOT NULL);
ALTER TABLE SOLICITUDES MODIFY (TELEFONO NOT NULL);
ALTER TABLE ENVIOS MODIFY (NUMERO_SEGUIMIENTO NOT NULL);
ALTER TABLE ENVIOS MODIFY (FECHA_SALIDA NOT NULL);
ALTER TABLE INCIDENCIAS MODIFY (FECHA NOT NULL);
ALTER TABLE INCIDENCIAS MODIFY (ESTADO NOT NULL);

---primary keys

ALTER TABLE CLIENTES ADD CONSTRAINT PK_Clientes PRIMARY KEY
(OID_CLIENTE);
ALTER TABLE EMPLEADOS ADD CONSTRAINT PK_Empleados PRIMARY KEY
(OID_EMPLEADO);
ALTER TABLE PEDIDOS ADD CONSTRAINT PK_Pedidos PRIMARY KEY
(OID_PEDIDO);
ALTER TABLE PAGOS ADD CONSTRAINT PK_Pagos PRIMARY KEY
(OID_PAGO);
ALTER TABLE CATEGORIAS ADD CONSTRAINT PK_Categorias PRIMARY KEY
(OID_CATEGORIA);
ALTER TABLE LINEAPEDIDO ADD CONSTRAINT PK_LineaPedido PRIMARY KEY
(OID_LINEAPEDIDO);
ALTER TABLE PRODUCTOS ADD CONSTRAINT PK_Productos PRIMARY KEY
(OID_PRODUCTO);
ALTER TABLE SOLICITUDES ADD CONSTRAINT PK_Solicitudes PRIMARY KEY
(OID_SOLICITUD);
ALTER TABLE ENVIOS ADD CONSTRAINT PK_Envios PRIMARY KEY
(OID_ENVIO);
ALTER TABLE INCIDENCIAS ADD CONSTRAINT PK_Incidencias PRIMARY KEY
(OID_INCIDENCIA);

---Alternate keys

ALTER TABLE CLIENTES ADD CONSTRAINT AK_Clientes UNIQUE
(USUARIO);
ALTER TABLE PRODUCTOS ADD CONSTRAINT AK_Productos UNIQUE
(NOMBRE);
ALTER TABLE EMPLEADOS ADD CONSTRAINT AK_Empleados UNIQUE
(USUARIO);
ALTER TABLE CATEGORIAS ADD CONSTRAINT AK_Categorias UNIQUE
(NOMBRE_CAT);

---Foreign keys    

ALTER TABLE PEDIDOS ADD CONSTRAINT FK_Pedidos FOREIGN KEY (OID_CLIENTE) REFERENCES CLIENTES (OID_CLIENTE) ON DELETE CASCADE;
ALTER TABLE PRODUCTOS ADD CONSTRAINT FK_Productos FOREIGN KEY (OID_CATEGORIA) REFERENCES CATEGORIAS (OID_CATEGORIA) ON DELETE CASCADE;
ALTER TABLE LINEAPEDIDO ADD CONSTRAINT FK_LineaPedido FOREIGN KEY (OID_PEDIDO) REFERENCES PEDIDOS (OID_PEDIDO) ON DELETE CASCADE;
ALTER TABLE LINEAPEDIDO ADD CONSTRAINT FK2_LineaPedido FOREIGN KEY (OID_PRODUCTO) REFERENCES PRODUCTOS (OID_PRODUCTO) ON DELETE CASCADE;
ALTER TABLE SOLICITUDES ADD CONSTRAINT FK_Solicitudes FOREIGN KEY (OID_EMPLEADO) REFERENCES EMPLEADOS (OID_EMPLEADO) ON DELETE CASCADE;
ALTER TABLE SOLICITUDES ADD CONSTRAINT FK2_Solicitudes FOREIGN KEY (OID_PEDIDO) REFERENCES PEDIDOS (OID_PEDIDO) ON DELETE CASCADE;
ALTER TABLE ENVIOS ADD CONSTRAINT FK_Envios FOREIGN KEY (OID_SOLICITUD) REFERENCES SOLICITUDES (OID_SOLICITUD) ON DELETE CASCADE;
ALTER TABLE INCIDENCIAS ADD CONSTRAINT FK_Incidencias FOREIGN KEY (OID_ENVIO) REFERENCES ENVIOS (OID_ENVIO) ON DELETE CASCADE;

---restricciones de datos

ALTER TABLE CLIENTES ADD CONSTRAINT CK_NUM_CLIENTE CHECK(REGEXP_LIKE(teléfono, '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'));
ALTER TABLE CLIENTES ADD CONSTRAINT CK_EMAIL_CLIENTE CHECK(email LIKE '_%@%_.__%');

ALTER TABLE EMPLEADOS ADD CONSTRAINT CK_DNI_EMPLEADO CHECK(REGEXP_LIKE(dni, '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z]'));
ALTER TABLE EMPLEADOS ADD CONSTRAINT CK_TEL_EMPLEADO CHECK(REGEXP_LIKE(telefono, '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'));
ALTER TABLE EMPLEADOS ADD CONSTRAINT CK_CORREO_EMPLEADO CHECK(email LIKE '_%@%_.__%');

ALTER TABLE PEDIDOS ADD CONSTRAINT CK_ESTADO_PEDIDO CHECK (estado_pedido IN ('PENDIENTE', 'REALIZADO', 'CANCELADO'));
ALTER TABLE PEDIDOS ADD CONSTRAINT CK_PAIS_PEDIDO CHECK (pais IN ('ESPAÑA', 'PORTUGAL'));

ALTER TABLE PAGOS ADD CONSTRAINT CK_ESTADO_PAGO CHECK (estado_pago IN ('PENDIENTE', 'REALIZADO'));
ALTER TABLE PAGOS ADD CONSTRAINT CK_TIPO_PAGO CHECK (tipo_pago IN ('CONTRA REEMBOLSO', 'PAYPAL', 'TRANSFERENCIA'));

ALTER TABLE SOLICITUDES ADD CONSTRAINT CK_TIPO_SOLICITUD CHECK (tipo IN ('CERTIFICADA', 'ORDINARIA'));

ALTER TABLE ENVIOS ADD CONSTRAINT CK_NUM_SEGUIMIENTO CHECK(REGEXP_LIKE(numero_seguimiento, '[0-9]{16}'));

ALTER TABLE INCIDENCIAS ADD CONSTRAINT CK_ESTADO_INCIDENCIA CHECK (estado IN ('PENDIENTE', 'SOLUCIONADA'));


--------------------------------------------------------------------

CREATE SEQUENCE SEC_CLIENTE
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_EMPLEADO
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_PAGO
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_PEDIDO
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_PRODUCTO
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_CATEGORIA
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_LINEAPEDIDO
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_SOLICITUD
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
CREATE SEQUENCE SEC_ENVIO
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
CREATE SEQUENCE SEC_INCIDENCIA
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999
    CYCLE;
    
    
---TRIGGERS ASOCIADOS A SECUENCIAS:

CREATE OR REPLACE TRIGGER CREA_OID_CLIENTE
BEFORE INSERT ON CLIENTES
FOR EACH ROW
BEGIN 
SELECT SEC_CLIENTE.CURRVAL INTO :NEW.OID_CLIENTE FROM DUAL;
END;

/
CREATE OR REPLACE TRIGGER CREA_OID_EMPLEADO
BEFORE INSERT ON EMPLEADOS
FOR EACH ROW
BEGIN
SELECT SEC_EMPLEADO.CURRVAL INTO :NEW.OID_EMPLEADO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_PAGO
BEFORE INSERT ON PAGOS
FOR EACH ROW
BEGIN
SELECT SEC_PAGO.CURRVAL INTO :NEW.OID_PAGO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_PEDIDO
BEFORE INSERT ON PEDIDOS
FOR EACH ROW
BEGIN
SELECT SEC_PEDIDO.CURRVAL INTO :NEW.OID_PEDIDO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_PRODUCTO
BEFORE INSERT ON PRODUCTOS
FOR EACH ROW
BEGIN
SELECT SEC_PRODUCTO.CURRVAL INTO :NEW.OID_PRODUCTO FROM DUAL;
END; 
/
CREATE OR REPLACE TRIGGER CREA_OID_CATEGORIA
BEFORE INSERT ON CATEGORIAS
FOR EACH ROW
BEGIN 
SELECT SEC_CATEGORIA.CURRVAL INTO :NEW.OID_CATEGORIA FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_LINEAPEDIDO
BEFORE INSERT ON LINEAPEDIDO
FOR EACH ROW
BEGIN
SELECT SEC_LINEAPEDIDO.CURRVAL INTO :NEW.OID_LINEAPEDIDO FROM DUAL;
END; 
/
CREATE OR REPLACE TRIGGER CREA_OID_SOLICITUD
BEFORE INSERT ON SOLICITUDES
FOR EACH ROW
BEGIN
SELECT SEC_SOLICITUD.CURRVAL INTO :NEW.OID_SOLICITUD FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_ENVIO
BEFORE INSERT ON ENVIOS
FOR EACH ROW
BEGIN
SELECT SEC_ENVIO.CURRVAL INTO :NEW.OID_ENVIO FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER CREA_OID_INCIDENCIA
BEFORE INSERT ON INCIDENCIAS
FOR EACH ROW
BEGIN
SELECT SEC_INCIDENCIA.CURRVAL INTO :NEW.OID_INCIDENCIA FROM DUAL;
END;
/

---PROCEDIMIENTOS 

CREATE OR REPLACE PROCEDURE crear_cliente(
w_nombre IN clientes.nombre%TYPE,
w_apellidos IN clientes.apellidos%TYPE,
w_dirección IN clientes.dirección%TYPE,
w_teléfono IN clientes.teléfono%TYPE,
w_email IN clientes.email%TYPE,
w_dni IN clientes.dni%TYPE,
w_usuario IN clientes.usuario%TYPE,
w_contrasenya IN clientes.contrasenya%TYPE
) IS
BEGIN
INSERT INTO clientes (oid_cliente, nombre, apellidos,
dirección, teléfono, email, dni, usuario, contrasenya)
VALUES (SEC_CLIENTE.NEXTVAL, w_nombre, w_apellidos, w_dirección, 
w_teléfono, w_email, w_dni, w_usuario, w_contrasenya);
END crear_cliente;
/

-------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE crear_empleado(
w_nombre IN EMPLEADOS.nombre%TYPE,
w_apellidos IN EMPLEADOS.apellidos%TYPE,
w_email IN EMPLEADOS.email%TYPE,
w_telefono IN EMPLEADOS.telefono%TYPE,
w_dni IN EMPLEADOS.dni%TYPE,
w_usuario IN EMPLEADOS.usuario%TYPE,
w_contrasenya IN EMPLEADOS.contrasenya%TYPE
) IS
BEGIN
INSERT INTO EMPLEADOS (OID_EMPLEADO,nombre,apellidos,
email,telefono,dni,usuario,contrasenya)
VALUES (SEC_EMPLEADO.NEXTVAL,w_nombre,w_apellidos,w_email,w_telefono,w_dni,w_usuario,w_contrasenya);
COMMIT WORK;
END crear_empleado;
/
--------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE elimina_empleado (
w_OID_EMPLEADO IN EMPLEADOS.OID_EMPLEADO%TYPE
) IS
BEGIN
DELETE FROM EMPLEADOS WHERE OID_EMPLEADO = w_OID_EMPLEADO;
COMMIT;
END elimina_empleado;
/
---------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE crear_producto (
w_nombre IN PRODUCTOS.nombre%TYPE,
w_tamañoMaceta IN productos.tamaño%TYPE,
w_descripcion IN PRODUCTOS.descripcion%TYPE,
w_stock IN PRODUCTOS.stock%TYPE,
w_precio IN PRODUCTOS.precio%TYPE,
w_imagen IN PRODUCTOS.imagen%TYPE,
w_oid_categoria IN PRODUCTOS.OID_CATEGORIA%TYPE) IS
BEGIN
INSERT INTO PRODUCTOS (OID_PRODUCTO,nombre,tamaño,descripcion,stock,precio,imagen,OID_CATEGORIA)
VALUES (SEC_PRODUCTO.NEXTVAL, w_nombre,w_tamañoMaceta,w_descripcion,w_stock,w_precio,w_imagen,w_oid_categoria);
COMMIT;
END crear_producto;
/
-----------------------------------------------------------------------------------
DROP PROCEDURE quitar_producto;
CREATE OR REPLACE PROCEDURE quitar_producto(
w_OID_PRODUCTO IN PRODUCTOS.OID_PRODUCTO%TYPE) IS
BEGIN
DELETE FROM PRODUCTOS WHERE OID_PRODUCTO = w_OID_PRODUCTO;
COMMIT;
END quitar_producto;

/
------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE modificar_productos(
w_OID_PRODUCTO IN PRODUCTOS.OID_PRODUCTO%TYPE,
w_nombre IN PRODUCTOS.nombre%TYPE,
w_tamañoMaceta IN productos.tamaño%TYPE,
w_descripcion IN PRODUCTOS.descripcion%TYPE,
w_stock IN PRODUCTOS.stock%TYPE,
w_precio IN PRODUCTOS.precio%TYPE,
w_imagen IN PRODUCTOS.imagen%TYPE,
w_oid_categoria IN PRODUCTOS.OID_CATEGORIA%TYPE) IS
BEGIN 
    UPDATE PRODUCTOS
    SET nombre=w_nombre, tamaño=w_tamañoMaceta,
    descripcion=w_descripcion,stock=w_stock,precio=w_precio,imagen=w_imagen, OID_CATEGORIA =w_oid_categoria WHERE OID_PRODUCTO=w_OID_PRODUCTO
    ;
END;

/

-----------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE registrar_incidencia(
w_fecha IN incidencias.fecha%TYPE,
w_descripcion IN incidencias.descripcion%TYPE,
w_estado IN incidencias.estado%TYPE,
w_oid_envio IN incidencias.oid_envio%TYPE
) IS
BEGIN
INSERT INTO incidencias(OID_incidencia, fecha,descripcion,estado,OID_envio)
VALUES (SEC_INCIDENCIA.nextval, w_fecha, w_descripcion, w_estado, w_oid_envio);
COMMIT WORK;
END registrar_incidencia;
/
-------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE crear_pago(
w_cantidad IN pagos.cantidad%TYPE,
w_fecha IN pagos.fecha_pago%TYPE,
w_estado IN pagos.estado_pago%TYPE,
w_tipo IN pagos.tipo_pago%TYPE,
w_oid_pedido IN pagos.oid_pedido%TYPE
) IS
BEGIN
INSERT INTO pagos(OID_PAGO,cantidad, fecha_pago, estado_pago, tipo_pago, oid_pedido)
VALUES (SEC_PAGO.NEXTVAL,w_cantidad, w_fecha, w_estado, w_tipo, w_oid_pedido);
COMMIT WORK;
END crear_pago;
/

CREATE OR REPLACE PROCEDURE crear_solicitud (
w_direccion IN solicitudes.direccion%TYPE,
w_nombre_dest IN solicitudes.nombre_destinatario%TYPE,
w_telefono IN solicitudes.telefono%TYPE,
w_oid_pedido IN solicitudes.OID_PEDIDO%TYPE,
w_oid_empleado IN solicitudes.OID_EMPLEADO%TYPE,
w_tipo IN solicitudes.tipo%TYPE
) IS
BEGIN
INSERT INTO SOLICITUDES (OID_SOLICITUD, direccion, nombre_destinatario,
telefono, OID_PEDIDO, OID_EMPLEADO, tipo)
VALUES (SEC_SOLICITUD.NEXTVAL, w_direccion, w_nombre_dest, w_telefono, 
w_oid_pedido, w_oid_empleado, w_tipo);
COMMIT;
END crear_solicitud;
/

CREATE OR REPLACE PROCEDURE crear_pedido(
w_direccion IN PEDIDOS.direccion%TYPE,
w_pais IN PEDIDOS.pais%TYPE,
w_ciudad IN PEDIDOS.ciudad%TYPE,
w_precio_total IN PEDIDOS.precio_total%TYPE,
w_codigo_postal IN PEDIDOS.codigo_postal%TYPE,
w_estado_pedido IN PEDIDOS.estado_pedido%TYPE,
w_OID_CLIENTE IN PEDIDOS.OID_CLIENTE%TYPE)
IS 
BEGIN 
INSERT INTO PEDIDOS(OID_PEDIDO,fecha,direccion,
pais,ciudad,precio_total,codigo_postal,estado_pedido,OID_CLIENTE) VALUES(SEC_PEDIDO.NEXTVAL, CURRENT_DATE, 
w_direccion, w_pais,w_ciudad,w_precio_total,w_codigo_postal, w_estado_pedido,w_OID_CLIENTE);

COMMIT WORK;
END crear_pedido;
 /
-------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE modificar_solicitud (
w_oid_solicitud IN SOLICITUDES.OID_SOLICITUD%TYPE,
w_direccion IN SOLICITUDES.direccion%TYPE,
w_nombre_destinatario IN SOLICITUDES.nombre_destinatario%TYPE,
w_telefono IN SOLICITUDES.telefono%TYPE,
w_oid_pedido IN SOLICITUDES.oid_pedido%TYPE,
w_oid_empleado IN SOLICITUDES.oid_empleado%TYPE,
w_tipo IN SOLICITUDES.tipo%TYPE) IS
BEGIN 
    UPDATE SOLICITUDES
    SET direccion=w_direccion, nombre_destinatario=w_nombre_destinatario,
    telefono=w_telefono,oid_pedido=w_oid_pedido,oid_empleado=w_oid_empleado,
    tipo=w_tipo WHERE OID_SOLICITUD=w_oid_solicitud;
END;

/
-------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE modificar_pago (
w_oid_pago IN PAGOS.OID_PAGO%TYPE,
w_cantidad IN PAGOS.cantidad%TYPE,
w_fecha_pago IN PAGOS.fecha_pago%TYPE,
w_estado_pago IN PAGOS.estado_pago%TYPE,
w_tipo_pago IN PAGOS.tipo_pago%TYPE,
w_oid_pedido IN PAGOS.oid_pedido%TYPE) IS
BEGIN 
    UPDATE PAGOS
    SET cantidad=w_cantidad, fecha_pago=w_fecha_pago,
    estado_pago=w_estado_pago,tipo_pago=w_tipo_pago,
    oid_pedido=w_oid_pedido WHERE OID_PAGO=w_oid_pago;
END;

/

CREATE OR REPLACE PROCEDURE crear_linea_pedido(
w_precio IN LINEAPEDIDO.precio%TYPE,
w_cantidad IN LINEAPEDIDO.cantidad%TYPE,
w_oid_pedido IN LINEAPEDIDO.OID_PRODUCTO%TYPE,
w_oid_producto IN LINEAPEDIDO.OID_PRODUCTO%TYPE)
IS BEGIN 
INSERT INTO LINEAPEDIDO(OID_LINEAPEDIDO, precio, cantidad,OID_PEDIDO, OID_PRODUCTO)  VALUES(SEC_LINEAPEDIDO.NEXTVAL, w_precio,
w_cantidad,w_oid_pedido, w_oid_producto);
COMMIT WORK;
END crear_linea_pedido;
 /

CREATE OR REPLACE PROCEDURE crear_categoria(
w_nombre IN CATEGORIAS.nombre_cat%TYPE)
IS BEGIN
INSERT INTO CATEGORIAS(OID_CATEGORIA,nombre_cat)VALUES(SEC_CATEGORIA.NEXTVAL, w_nombre);
COMMIT WORK;
END crear_categoria;
/
CREATE OR REPLACE PROCEDURE cambiar_estado_pedido(
w_OID_PEDIDO IN PEDIDOS.OID_PEDIDO%TYPE) IS
BEGIN 
    UPDATE PEDIDOS
    SET ESTADO_PEDIDO='REALIZADO' WHERE OID_PEDIDO=w_OID_PEDIDO;
END cambiar_estado_pedido;
/



